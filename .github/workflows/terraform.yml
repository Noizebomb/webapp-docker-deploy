name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2 
        
    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.0
        terraform_wrapper: false 

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -input=false

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false -no-color 

    - name: Sleep for 90 seconds
      run: sleep 90s
      shell: bash

    - name: Output as a variable
      run: terraform output -json EC2INSTANCE | jq -r '.[0]' >> dev.inventory

   # - name: Set IP address as environment variable
    #  run: |
     #       EC2INSTANCE=$(cat dev.inventory)
      #      echo "EC2INSTANCE"=${EC2INSTANCE} >> $GITHUB_ENV

   # - name: add IP adress to dev.inventory file
    #  #run: cat output.txt >> dev.inventory
     # run: sed -i "2r output.txt" dev.inventory

    - name: test contents of dev.inventory
      run: cat dev.inventory

    - name: save keyfile
      run: 'echo "$SSH_KEY" > key.pem'
      shell: bash
      env:
        SSH_KEY: ${{secrets.SSH_KEY}}

    - name: change permissions
      run: chmod 400 key.pem

    - name: install ansible
      run: sudo apt install ansible -y

    - name: Run playbook
      run: ansible-playbook -i dev.inventory --private-key key.pem playbook.yml -vvvv
